{"name": "test_create_booking", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://restful-booker.herokuapp.com/booking", "trace": "api_client = <core.clients.api_client.APIClient object at 0x000001429103B4A0>\ngenerate_random_booking_dates = {'additionalneeds': 'Range entire cover early similar.', 'depositpaid': True, 'firstname': 'Danielle', 'lastname': 'Leonard', ...}\n\n    @allure.feature('Test create booking')\n    @allure.story('Test successful create booking')\n    def test_create_booking(api_client, generate_random_booking_dates):\n        with allure.step('Test create booking'):\n>           response = api_client.create_booking(generate_random_booking_dates)\n\ntests\\test_health_check.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\clients\\api_client.py:92: in create_booking\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [500]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://restful-booker.herokuapp.com/booking\n\n.venv\\Lib\\site-packages\\requests\\models.py:1024: HTTPError"}, "steps": [{"name": "Test create booking", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://restful-booker.herokuapp.com/booking\n", "trace": "  File \"E:\\Program Files (x86)\\JetBrains\\BookingProject\\tests\\test_health_check.py\", line 72, in test_create_booking\n    response = api_client.create_booking(generate_random_booking_dates)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Program Files (x86)\\JetBrains\\BookingProject\\core\\clients\\api_client.py\", line 92, in create_booking\n    response.raise_for_status()\n  File \"E:\\Program Files (x86)\\JetBrains\\BookingProject\\.venv\\Lib\\site-packages\\requests\\models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n"}, "steps": [{"name": "Creating booking", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://restful-booker.herokuapp.com/booking\n", "trace": "  File \"E:\\Program Files (x86)\\JetBrains\\BookingProject\\core\\clients\\api_client.py\", line 92, in create_booking\n    response.raise_for_status()\n  File \"E:\\Program Files (x86)\\JetBrains\\BookingProject\\.venv\\Lib\\site-packages\\requests\\models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n"}, "start": 1730020146166, "stop": 1730020146363}], "start": 1730020146166, "stop": 1730020146364}], "start": 1730020146166, "stop": 1730020146364, "uuid": "aaa83c57-bba3-404b-89fa-ace3e30cd890", "historyId": "181e0e7755df0582c00fca22959904d2", "testCaseId": "181e0e7755df0582c00fca22959904d2", "fullName": "tests.test_health_check#test_create_booking", "labels": [{"name": "feature", "value": "Test create booking"}, {"name": "story", "value": "Test successful create booking"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_health_check"}, {"name": "host", "value": "Oleg"}, {"name": "thread", "value": "13152-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_health_check"}]}